name: CI

on:
  push:
    branches: "master"
    tags: ["*"]
  pull_request:
  release:

jobs:
  test:
    name: Julia ${{ matrix.julia-version }} - ${{ matrix.os }} - ${{ matrix.julia-arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        julia-version:
          - 'nightly'
          - '1'
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        julia-arch:
          - x64
          - x86
        exclude:
          - os: macos-latest
            julia-arch: x86

    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}
      - name: Cache artifacts
        uses: actions/cache@v3
        env:
          cache-name: cache-artifacts
        with:
          path: |
            ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: Build package
        shell: julia --color=yes --project="" {0}
        run: |
          using Pkg
          Pkg.develop(PackageSpec(path=pwd()))
          Pkg.build("MKL"; verbose=true)
      - uses: julia-actions/julia-runtest@latest
        env:
          # Loading MKL during the tests can create an environment variable for OpenMP that is visible after the tests (#130)
          JULIA_TEST_CHECK_MUTATED_ENV: "false"
